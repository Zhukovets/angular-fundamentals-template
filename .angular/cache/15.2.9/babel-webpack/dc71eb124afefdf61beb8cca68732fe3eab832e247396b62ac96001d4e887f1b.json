{"ast":null,"code":"import { BehaviorSubject, finalize, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MockDataService = /*#__PURE__*/(() => {\n  class MockDataService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.charactersLoader$ = new BehaviorSubject(false);\n      this.planetsLoader$ = new BehaviorSubject(false);\n    }\n    getCharacters(searchTerm) {\n      this.charactersLoader$.next(true);\n      const queryParams = searchTerm ? `?search=${searchTerm}` : '';\n      return this.httpClient.get(`https://swapi.dev/api/people/${queryParams}`).pipe(finalize(() => this.charactersLoader$.next(false))).pipe(map(response => response.results));\n    }\n    getPlanets(searchTerm) {\n      this.planetsLoader$.next(true);\n      const queryParams = searchTerm ? `?search=${searchTerm}` : '';\n      return this.httpClient.get(`https://swapi.dev/api/planets/${queryParams}`).pipe(finalize(() => this.planetsLoader$.next(false))).pipe(map(response => response.results));\n    }\n    getCharactersLoader() {\n      return this.charactersLoader$;\n    }\n    getPlanetLoader() {\n      return this.planetsLoader$;\n    }\n  }\n  MockDataService.ɵfac = function MockDataService_Factory(t) {\n    return new (t || MockDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MockDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MockDataService,\n    factory: MockDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return MockDataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}