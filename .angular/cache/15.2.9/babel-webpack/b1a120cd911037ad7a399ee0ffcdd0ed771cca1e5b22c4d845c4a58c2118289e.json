{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CoursesService {\n  getAll() {\n    // Add your code here\n  }\n  createCourse(course) {\n    // Add your code here\n  }\n  editCourse(id, course) {\n    // Add your code here\n  }\n  getCourse(id) {\n    // Add your code here\n  }\n  deleteCourse(id) {\n    // Add your code here\n  }\n  filterCourses(value) {\n    // Add your code here\n  }\n  getAllAuthors() {\n    // Add your code here\n  }\n  createAuthor(name) {\n    // Add your code here\n  }\n  getAuthorById(id) {\n    // Add your code here\n  }\n}\nCoursesService.ɵfac = function CoursesService_Factory(t) {\n  return new (t || CoursesService)();\n};\nCoursesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesService,\n  factory: CoursesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,cAAc;EACvBC,MAAM;IACF;EAAA;EAGJC,YAAY,CAACC,MAAW;IACpB;EAAA;EAGJC,UAAU,CAACC,EAAU,EAAEF,MAAW;IAC9B;EAAA;EAGJG,SAAS,CAACD,EAAU;IAChB;EAAA;EAGJE,YAAY,CAACF,EAAU;IACnB;EAAA;EAGJG,aAAa,CAACC,KAAa;IACvB;EAAA;EAGJC,aAAa;IACT;EAAA;EAGJC,YAAY,CAACC,IAAY;IACrB;EAAA;EAGJC,aAAa,CAACR,EAAU;IACpB;EAAA;;AAlCKL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFX;AAAM","names":["CoursesService","getAll","createCourse","course","editCourse","id","getCourse","deleteCourse","filterCourses","value","getAllAuthors","createAuthor","name","getAuthorById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Любомир\\Desktop\\Codes\\EPAM\\Angular\\2 task\\angular-fundamentals-template-main (1)\\angular-fundamentals-template-main\\src\\app\\services\\courses.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoursesService {\n    getAll() {\n        // Add your code here\n    }\n\n    createCourse(course: any) { // replace 'any' with the required interface\n        // Add your code here\n    }\n\n    editCourse(id: string, course: any) { // replace 'any' with the required interface\n        // Add your code here\n    }\n\n    getCourse(id: string) {\n        // Add your code here\n    }\n\n    deleteCourse(id: string) {\n        // Add your code here\n    }\n\n    filterCourses(value: string) {\n        // Add your code here\n    }\n\n    getAllAuthors() {\n        // Add your code here\n    }\n\n    createAuthor(name: string) {\n        // Add your code here\n    }\n\n    getAuthorById(id: string) {\n        // Add your code here\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}