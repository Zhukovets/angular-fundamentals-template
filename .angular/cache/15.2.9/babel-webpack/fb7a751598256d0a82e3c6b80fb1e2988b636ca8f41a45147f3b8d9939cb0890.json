{"ast":null,"code":"import { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fortawesome/angular-fontawesome\";\nimport * as i2 from \"@angular/common\";\nfunction ButtonComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelement(3, \"fa-icon\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, ctx_r0.buttonText), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", \"trash-can\");\n  }\n}\nexport class ButtonComponent {\n  constructor(library) {\n    library.addIconPacks(fas);\n  }\n}\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n  return new (t || ButtonComponent)(i0.ɵɵdirectiveInject(i1.FaIconLibrary));\n};\nButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ButtonComponent,\n  selectors: [[\"app-button\"]],\n  inputs: {\n    buttonText: \"buttonText\",\n    iconName: \"iconName\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"app-button\", 4, \"ngIf\"], [1, \"app-button\"], [3, \"icon\"]],\n  template: function ButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ButtonComponent_div_0_Template, 4, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonText || ctx.iconName);\n    }\n  },\n  dependencies: [i2.NgIf, i1.FaIconComponent, i2.UpperCasePipe],\n  styles: [\".app-button[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 13px 36px;\\n  gap: 10px;\\n  background: #007298;\\n  border-radius: 4px;\\n  color: #fff;\\n  text-transform: uppercase;\\n  cursor: pointer;\\n}\\n.app-button[_ngcontent-%COMP%]:hover {\\n  background: #016486;\\n}\\n.app-button[_ngcontent-%COMP%]:active {\\n  box-shadow: 2px 2px 5px #016486;\\n}\\n.app-button[_ngcontent-%COMP%]:focus {\\n  background: black;\\n  color: white;\\n}\\n.app-button__single-icon[_ngcontent-%COMP%] {\\n  padding: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLHlCQUFBO0VBQ0EsZUFBQTtBQUNKO0FBQ0k7RUFDSSxtQkFBQTtBQUNSO0FBRUk7RUFDSSwrQkFBQTtBQUFSO0FBR0k7RUFDSSxpQkFBQTtFQUNBLFlBQUE7QUFEUjtBQUlJO0VBQ0ksYUFBQTtBQUZSIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcC1idXR0b24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxM3B4IDM2cHg7XHJcbiAgICBnYXA6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDA3Mjk4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMwMTY0ODY7XHJcbiAgICB9XHJcblxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDJweCAycHggNXB4ICMwMTY0ODY7XHJcbiAgICB9XHJcblxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3NpbmdsZS1pY29uIHtcclxuICAgICAgICBwYWRkaW5nOiAxM3B4O1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SACEA,GAAG,QAIE,mCAAmC;;;;;;ICP1CC,8BAAuD;IAErDA,YACA;;IAAAA,6BAAwC;IAC1CA,iBAAM;;;;IAFJA,eACA;IADAA,wEACA;IAASA,eAAoB;IAApBA,kCAAoB;;;ADW/B,OAAM,MAAOC,eAAe;EAC1BC,YAAYC,OAAsB;IAChCA,OAAO,CAACC,YAAY,CAACL,GAAG,CAAC;EAC3B;;AAHWE,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAI;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd5BZ,gEAIM;;;MAJmBA,qDAA4B","names":["fas","i0","ButtonComponent","constructor","library","addIconPacks","selectors","inputs","buttonText","iconName","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\olewn\\Desktop\\angular-fundamentals-template\\src\\app\\shared\\components\\button\\button.component.ts","C:\\Users\\olewn\\Desktop\\angular-fundamentals-template\\src\\app\\shared\\components\\button\\button.component.html"],"sourcesContent":["import { Component, Input } from \"@angular/core\";\r\nimport { FaIconLibrary } from \"@fortawesome/angular-fontawesome\";\r\nimport {\r\n  fas,\r\n  faTrashCan,\r\n  faPencil,\r\n  IconDefinition,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: \"app-button\",\r\n  templateUrl: \"./button.component.html\",\r\n  styleUrls: [\"./button.component.scss\"],\r\n})\r\nexport class ButtonComponent {\r\n  constructor(library: FaIconLibrary) {\r\n    library.addIconPacks(fas);\r\n  }\r\n\r\n  // Use the names for the inputs `buttonText` and `iconName`.\r\n  @Input() buttonText?: string;\r\n  @Input() iconName?: IconDefinition;\r\n}\r\n","<div class=\"app-button\" *ngIf=\"buttonText || iconName\">\r\n  <!-- Replace the text below with your code -->\r\n  {{buttonText | uppercase}}\r\n  <fa-icon [icon]=\"'trash-can'\"></fa-icon>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}